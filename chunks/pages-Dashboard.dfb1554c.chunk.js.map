{"version":3,"sources":["webpack:///./components/pages/Dashboard/index.js","webpack:///./services/mailbox/index.js"],"names":["Dashboard","Default","modules","Form","Field","Button","useState","input","setInput","error","isProcessing","setIsProcessing","handleInputChange","e","currentTarget","name","value","placeholder","onChange","label","type","size","onClick","setTimeout","MailBoxAPI","email","then","result","console","log","data","access_key","smtp","format","fetch","method","res","json"],"mappings":";;;;;;yrDAGMA,EAAY,WAAO,IACfC,EAAiCC,UAAjCD,QAASE,EAAwBD,UAAxBC,KAAMC,EAAkBF,UAAlBE,MAAOC,EAAWH,UAAXG,OADR,IAEIC,mBAAS,IAFb,GAEfC,EAFe,KAERC,EAFQ,SAGIF,mBAAS,IAHb,GAGfG,EAHe,eAIkBH,oBAAS,GAJ3B,IAIfI,EAJe,KAIDC,EAJC,KAKhBC,EAAoB,SAACC,GACzBL,E,+VAAS,CAAD,GACHD,EADG,KAELM,EAAEC,cAAcC,KAAOF,EAAEC,cAAcE,UAY5C,OACE,kBAACf,EAAD,KAEE,mDACA,kBAACE,EAAD,KACE,kBAACC,EAAD,CACEW,KAAK,aACLE,YAAY,aACZC,SAAUN,IAEZ,kBAACR,EAAD,CACEW,KAAK,YACLI,MAAM,YACND,SAAUN,IAEZ,kBAACR,EAAD,CACEW,KAAK,QACLK,KAAK,QACLD,MAAM,QACNV,MAAOA,EACPS,SAAUN,IAEZ,kBAACP,EAAD,CAAQgB,KAAK,QAAQC,QA9BL,SAACT,GACrBF,GAAgB,GAChBY,YAAW,WACTC,YAAWjB,EAAMkB,OAAOC,MAAK,SAACC,GAAD,OAAYC,QAAQC,IAAIF,MACrDhB,GAAgB,KACf,OAyBC,UACMD,EAAe,gBAAkB,gB,EA3CzCV,E,gIAkDSA,EAAA,a,6FAlDTA,E;;;;;;iVCHOwB,EAAa,SAACC,GACzB,IAAIK,EAAO,CACTC,WAAY,mCACZN,MAAOA,EACPO,KAAM,EACNC,OAAQ,GAEV,OAAOC,MAAM,6CAAD,OACmCJ,EAAKC,WADxC,kBAC4DD,EAAKL,MADjE,iBAC+EK,EAAKE,KADpF,mBACmGF,EAAKG,QAClH,CACEE,OAAQ,QAGTT,MAAK,SAACU,GAAD,OAASA,EAAIC,UAClBX,MAAK,SAACC,GAAD,OAAYA,O,4FAdTH,E","file":"chunks/pages-Dashboard.dfb1554c.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport modules from \"components\";\nimport { MailBoxAPI } from \"services/mailbox\";\nconst Dashboard = () => {\n  const { Default, Form, Field, Button } = modules;\n  const [input, setInput] = useState({});\n  const [error, setError] = useState(\"\");\n  const [isProcessing, setIsProcessing] = useState(false);\n  const handleInputChange = (e) => {\n    setInput({\n      ...input,\n      [e.currentTarget.name]: e.currentTarget.value,\n    });\n  };\n\n  const validateEmail = (e) => {\n    setIsProcessing(true);\n    setTimeout(function () {\n      MailBoxAPI(input.email).then((result) => console.log(result));\n      setIsProcessing(false);\n    }, 1000);\n  };\n\n  return (\n    <Default>\n      {/* Title component renders here */}\n      <h1>Using 3rd party API</h1>\n      <Form>\n        <Field\n          name=\"first-name\"\n          placeholder=\"First Name\"\n          onChange={handleInputChange}\n        />\n        <Field\n          name=\"last-name\"\n          label=\"Last Name\"\n          onChange={handleInputChange}\n        />\n        <Field\n          name=\"email\"\n          type=\"email\"\n          label=\"Email\"\n          error={error}\n          onChange={handleInputChange}\n        />\n        <Button size=\"small\" onClick={validateEmail}>\n          {`${isProcessing ? \"Validating...\" : \"Validate\"}`}\n        </Button>\n      </Form>\n    </Default>\n  );\n};\n\nexport default Dashboard;\n","export const MailBoxAPI = (email) => {\n  var data = {\n    access_key: \"4a3b9b72a0029523ac5dd0da00efae2e\",\n    email: email,\n    smtp: 1,\n    format: 1,\n  };\n  return fetch(\n    `https://apilayer.net/api/check?access_key=${data.access_key}&email=${data.email}&smtp=${data.smtp}&format=${data.format}`,\n    {\n      method: \"GET\",\n    }\n  )\n    .then((res) => res.json())\n    .then((result) => result);\n};\n"],"sourceRoot":""}